{"ast":null,"code":"var _jsxFileName = \"E:\\\\IT\\u904B\\u7528\\u30B7\\u30B9\\u30C6\\u30E0\\\\03_\\u5B9F\\u88C5\\\\it-ops-system\\\\frontend\\\\src\\\\components\\\\SideNav.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { Drawer, List, ListItem, ListItemIcon, ListItemText } from '@mui/material';\nimport DashboardIcon from '@mui/icons-material/Dashboard';\nimport SecurityIcon from '@mui/icons-material/Security';\nimport PeopleIcon from '@mui/icons-material/People';\nimport SettingsIcon from '@mui/icons-material/Settings';\nimport TimelineIcon from '@mui/icons-material/Timeline';\nimport { useAuth } from '../contexts/AuthContext';\nimport { roleApi } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst menuItems = [{\n  label: 'ダッシュボード',\n  icon: /*#__PURE__*/_jsxDEV(DashboardIcon, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 29\n  }, this),\n  path: '/',\n  permission: 'read:dashboard'\n}, {\n  label: 'メトリクス',\n  icon: /*#__PURE__*/_jsxDEV(TimelineIcon, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 27\n  }, this),\n  path: '/metrics',\n  permission: 'read:metrics'\n}, {\n  label: 'セキュリティ',\n  icon: /*#__PURE__*/_jsxDEV(SecurityIcon, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 28\n  }, this),\n  path: '/security',\n  permission: 'read:security'\n}, {\n  label: 'ユーザー管理',\n  icon: /*#__PURE__*/_jsxDEV(PeopleIcon, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 28\n  }, this),\n  path: '/users',\n  permission: 'read:users'\n}, {\n  label: 'システム設定',\n  icon: /*#__PURE__*/_jsxDEV(SettingsIcon, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 28\n  }, this),\n  path: '/settings',\n  permission: 'admin:system'\n}];\nexport const SideNav = () => {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const [userPermissions, setUserPermissions] = useState([]);\n  const [isGlobalAdmin, setIsGlobalAdmin] = useState(false);\n  useEffect(() => {\n    const fetchUserPermissions = async () => {\n      try {\n        if (!(user !== null && user !== void 0 && user.email)) return;\n        const data = await roleApi.getUserRoles(user.email);\n        setUserPermissions(data.roles);\n        setIsGlobalAdmin(data.isGlobalAdmin);\n      } catch (error) {\n        console.error('権限情報の取得に失敗しました:', error);\n      }\n    };\n    fetchUserPermissions();\n  }, [user]);\n  const hasPermission = permission => {\n    return isGlobalAdmin || userPermissions.includes(permission);\n  };\n  return /*#__PURE__*/_jsxDEV(Drawer, {\n    variant: \"permanent\",\n    children: /*#__PURE__*/_jsxDEV(List, {\n      children: menuItems.map(item => hasPermission(item.permission) && /*#__PURE__*/_jsxDEV(ListItem, {\n        button: true,\n        component: \"a\",\n        href: item.path,\n        children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n          children: item.icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: item.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this)]\n      }, item.path, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(SideNav, \"gTxwxQ6IHKDVJHqH45L1g5qU8Sk=\", false, function () {\n  return [useAuth];\n});\n_c = SideNav;\nvar _c;\n$RefreshReg$(_c, \"SideNav\");","map":{"version":3,"names":["useState","useEffect","Drawer","List","ListItem","ListItemIcon","ListItemText","DashboardIcon","SecurityIcon","PeopleIcon","SettingsIcon","TimelineIcon","useAuth","roleApi","jsxDEV","_jsxDEV","menuItems","label","icon","fileName","_jsxFileName","lineNumber","columnNumber","path","permission","SideNav","_s","user","userPermissions","setUserPermissions","isGlobalAdmin","setIsGlobalAdmin","fetchUserPermissions","email","data","getUserRoles","roles","error","console","hasPermission","includes","variant","children","map","item","button","component","href","primary","_c","$RefreshReg$"],"sources":["E:/IT運用システム/03_実装/it-ops-system/frontend/src/components/SideNav.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { Drawer, List, ListItem, ListItemIcon, ListItemText } from '@mui/material';\r\nimport DashboardIcon from '@mui/icons-material/Dashboard';\r\nimport SecurityIcon from '@mui/icons-material/Security';\r\nimport PeopleIcon from '@mui/icons-material/People';\r\nimport SettingsIcon from '@mui/icons-material/Settings';\r\nimport TimelineIcon from '@mui/icons-material/Timeline';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { roleApi } from '../services/api';\r\n\r\ninterface MenuItem {\r\n  label: string;\r\n  icon: React.ReactNode;\r\n  path: string;\r\n  permission: string;\r\n}\r\n\r\nconst menuItems: MenuItem[] = [\r\n  { label: 'ダッシュボード', icon: <DashboardIcon />, path: '/', permission: 'read:dashboard' },\r\n  { label: 'メトリクス', icon: <TimelineIcon />, path: '/metrics', permission: 'read:metrics' },\r\n  { label: 'セキュリティ', icon: <SecurityIcon />, path: '/security', permission: 'read:security' },\r\n  { label: 'ユーザー管理', icon: <PeopleIcon />, path: '/users', permission: 'read:users' },\r\n  { label: 'システム設定', icon: <SettingsIcon />, path: '/settings', permission: 'admin:system' }\r\n];\r\n\r\nexport const SideNav = () => {\r\n  const { user } = useAuth();\r\n  const [userPermissions, setUserPermissions] = useState<string[]>([]);\r\n  const [isGlobalAdmin, setIsGlobalAdmin] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchUserPermissions = async () => {\r\n      try {\r\n        if (!user?.email) return;\r\n\r\n        const data = await roleApi.getUserRoles(user.email);\r\n        setUserPermissions(data.roles);\r\n        setIsGlobalAdmin(data.isGlobalAdmin);\r\n      } catch (error) {\r\n        console.error('権限情報の取得に失敗しました:', error);\r\n      }\r\n    };\r\n\r\n    fetchUserPermissions();\r\n  }, [user]);\r\n\r\n  const hasPermission = (permission: string): boolean => {\r\n    return isGlobalAdmin || userPermissions.includes(permission);\r\n  };\r\n\r\n  return (\r\n    <Drawer variant=\"permanent\">\r\n      <List>\r\n        {menuItems.map((item) => (\r\n          hasPermission(item.permission) && (\r\n            <ListItem \r\n              button \r\n              key={item.path}\r\n              component=\"a\"\r\n              href={item.path}\r\n            >\r\n              <ListItemIcon>{item.icon}</ListItemIcon>\r\n              <ListItemText primary={item.label} />\r\n            </ListItem>\r\n          )\r\n        ))}\r\n      </List>\r\n    </Drawer>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}