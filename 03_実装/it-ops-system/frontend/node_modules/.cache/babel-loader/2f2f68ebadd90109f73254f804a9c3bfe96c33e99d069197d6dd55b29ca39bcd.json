{"ast":null,"code":"import axios from'axios';const API_BASE_URL=process.env.REACT_APP_API_URL||'http://localhost:3000/api';const BASE_URL=process.env.REACT_APP_API_BASE_URL||'http://localhost:3001/api';const axiosInstance=axios.create({baseURL:API_BASE_URL,headers:{'Content-Type':'application/json'},withCredentials:true});// リクエストインターセプター\naxiosInstance.interceptors.request.use(config=>{const token=localStorage.getItem('token');if(token){config.headers.Authorization=`Bearer ${token}`;}return config;},error=>{return Promise.reject(error);});// レスポンスインターセプター\naxiosInstance.interceptors.response.use(response=>response,async error=>{var _error$response;if(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===401){localStorage.removeItem('token');window.location.href='/login';}return Promise.reject(error);});export const authApi={async login(credentials){var _response$data$data;const response=await axiosInstance.post('/auth/login',credentials);if((_response$data$data=response.data.data)!==null&&_response$data$data!==void 0&&_response$data$data.token){localStorage.setItem('token',response.data.data.token);}return response.data;},async logout(){await axiosInstance.post('/auth/logout');localStorage.removeItem('token');},async getCurrentUser(){try{const response=await axiosInstance.get('/auth/me');return response.data.data||null;}catch(error){return null;}},checkPermission:async params=>{const response=await fetch(`${BASE_URL}/auth/check-permission`,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(params)});const data=await response.json();return data.allowed;}};export const metricsApi={async getSystemMetrics(){const response=await axiosInstance.get('/metrics/system');return response.data;}};export const alertsApi={getAlerts:async()=>{const response=await fetch(`${BASE_URL}/alerts`);const data=await response.json();if(data.status==='error'||!data.data){throw new Error(data.message||'Failed to fetch alerts');}return data.data;},acknowledgeAlert:async alertId=>{const response=await fetch(`${BASE_URL}/alerts/${alertId}/acknowledge`,{method:'POST',headers:{'Content-Type':'application/json'}});return response.json();}};export const logsApi={getLogs:async()=>{const response=await fetch(`${BASE_URL}/logs`);const data=await response.json();if(data.status==='error'||!data.data){throw new Error(data.message||'Failed to fetch logs');}return data.data;}};export const roleApi={async getRoleMappings(){const response=await axiosInstance.get('/auth/role-mappings');return response.data;},async getUserRoles(email){const response=await axiosInstance.get(`/auth/user-roles/${email}`);return response.data;}};export const m365Api={async getLicenses(){const response=await axiosInstance.get('/m365/licenses');return response.data;},async getUsers(){const response=await axiosInstance.get('/m365/users');return response.data;}};","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","BASE_URL","REACT_APP_API_BASE_URL","axiosInstance","create","baseURL","headers","withCredentials","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","authApi","login","credentials","_response$data$data","post","data","setItem","logout","getCurrentUser","get","checkPermission","params","fetch","method","body","JSON","stringify","json","allowed","metricsApi","getSystemMetrics","alertsApi","getAlerts","Error","message","acknowledgeAlert","alertId","logsApi","getLogs","roleApi","getRoleMappings","getUserRoles","email","m365Api","getLicenses","getUsers"],"sources":["E:/IT運用システム/03_実装/it-ops-system/frontend/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\r\nimport { ApiResponse, AuthState, User, LoginFormData, Alert, LogEntry } from '../types/api';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:3000/api';\r\nconst BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:3001/api';\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n  withCredentials: true,\r\n});\r\n\r\n// リクエストインターセプター\r\naxiosInstance.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// レスポンスインターセプター\r\naxiosInstance.interceptors.response.use(\r\n  (response) => response,\r\n  async (error) => {\r\n    if (error.response?.status === 401) {\r\n      localStorage.removeItem('token');\r\n      window.location.href = '/login';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport const authApi = {\r\n  async login(credentials: LoginFormData): Promise<ApiResponse<AuthState>> {\r\n    const response = await axiosInstance.post<ApiResponse<AuthState>>(\r\n      '/auth/login',\r\n      credentials\r\n    );\r\n    if (response.data.data?.token) {\r\n      localStorage.setItem('token', response.data.data.token);\r\n    }\r\n    return response.data;\r\n  },\r\n\r\n  async logout(): Promise<void> {\r\n    await axiosInstance.post('/auth/logout');\r\n    localStorage.removeItem('token');\r\n  },\r\n\r\n  async getCurrentUser(): Promise<User | null> {\r\n    try {\r\n      const response = await axiosInstance.get<ApiResponse<User>>('/auth/me');\r\n      return response.data.data || null;\r\n    } catch (error) {\r\n      return null;\r\n    }\r\n  },\r\n\r\n  checkPermission: async (params: { userEmail: string; check: { resource: string; action: string } }): Promise<boolean> => {\r\n    const response = await fetch(`${BASE_URL}/auth/check-permission`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(params),\r\n    });\r\n    const data = await response.json();\r\n    return data.allowed;\r\n  }\r\n};\r\n\r\nexport const metricsApi = {\r\n  async getSystemMetrics() {\r\n    const response = await axiosInstance.get('/metrics/system');\r\n    return response.data;\r\n  },\r\n};\r\n\r\nexport const alertsApi = {\r\n  getAlerts: async (): Promise<Alert[]> => {\r\n    const response = await fetch(`${BASE_URL}/alerts`);\r\n    const data: ApiResponse<Alert[]> = await response.json();\r\n    if (data.status === 'error' || !data.data) {\r\n      throw new Error(data.message || 'Failed to fetch alerts');\r\n    }\r\n    return data.data;\r\n  },\r\n\r\n  acknowledgeAlert: async (alertId: string): Promise<ApiResponse> => {\r\n    const response = await fetch(`${BASE_URL}/alerts/${alertId}/acknowledge`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n    return response.json();\r\n  },\r\n};\r\n\r\nexport const logsApi = {\r\n  getLogs: async (): Promise<LogEntry[]> => {\r\n    const response = await fetch(`${BASE_URL}/logs`);\r\n    const data: ApiResponse<LogEntry[]> = await response.json();\r\n    if (data.status === 'error' || !data.data) {\r\n      throw new Error(data.message || 'Failed to fetch logs');\r\n    }\r\n    return data.data;\r\n  },\r\n};\r\n\r\nexport const roleApi = {\r\n  async getRoleMappings() {\r\n    const response = await axiosInstance.get('/auth/role-mappings');\r\n    return response.data;\r\n  },\r\n\r\n  async getUserRoles(email: string) {\r\n    const response = await axiosInstance.get(`/auth/user-roles/${email}`);\r\n    return response.data;\r\n  }\r\n};\r\n\r\nexport const m365Api = {\r\n  async getLicenses() {\r\n    const response = await axiosInstance.get('/m365/licenses');\r\n    return response.data;\r\n  },\r\n\r\n  async getUsers() {\r\n    const response = await axiosInstance.get('/m365/users');\r\n    return response.data;\r\n  }\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}