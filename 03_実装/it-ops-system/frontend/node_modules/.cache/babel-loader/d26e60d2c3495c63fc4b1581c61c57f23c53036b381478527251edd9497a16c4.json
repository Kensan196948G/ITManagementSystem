{"ast":null,"code":"var _jsxFileName = \"E:\\\\IT\\u904B\\u7528\\u30B7\\u30B9\\u30C6\\u30E0\\\\03_\\u5B9F\\u88C5\\\\it-ops-system\\\\frontend\\\\src\\\\contexts\\\\AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const apiClient = axios.create({\n    baseURL: process.env.REACT_APP_API_URL || 'http://localhost:3000/api',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    withCredentials: true // CORSリクエストでクッキーを送信\n  });\n\n  // APIクライアントのインターセプターを設定\n  apiClient.interceptors.request.use(config => {\n    const token = localStorage.getItem(process.env.REACT_APP_AUTH_STORAGE_KEY || 'it_ops_token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  });\n  const login = async (username, password) => {\n    try {\n      setError(null);\n      const response = await apiClient.post('/auth/login', {\n        username,\n        password\n      });\n      const {\n        token\n      } = response.data.data;\n      localStorage.setItem(process.env.REACT_APP_AUTH_STORAGE_KEY || 'it_ops_token', token);\n      setIsAuthenticated(true);\n    } catch (err) {\n      setError('ログインに失敗しました');\n      throw err;\n    }\n  };\n  const logout = async () => {\n    try {\n      await apiClient.post('/auth/logout');\n    } finally {\n      localStorage.removeItem(process.env.REACT_APP_AUTH_STORAGE_KEY || 'it_ops_token');\n      setIsAuthenticated(false);\n    }\n  };\n  useEffect(() => {\n    const token = localStorage.getItem(process.env.REACT_APP_AUTH_STORAGE_KEY || 'it_ops_token');\n    if (token) {\n      setIsAuthenticated(true);\n    }\n    setLoading(false);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      loading,\n      error,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"YXPaaQPR7+B+V74kPuDsLm7hcJk=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","undefined","AuthProvider","children","_s","isAuthenticated","setIsAuthenticated","loading","setLoading","error","setError","apiClient","create","baseURL","process","env","REACT_APP_API_URL","headers","withCredentials","interceptors","request","use","config","token","localStorage","getItem","REACT_APP_AUTH_STORAGE_KEY","Authorization","login","username","password","response","post","data","setItem","err","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["E:/IT運用システム/03_実装/it-ops-system/frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\ninterface AuthContextType {\r\n  isAuthenticated: boolean;\r\n  loading: boolean;\r\n  error: string | null;\r\n  login: (username: string, password: string) => Promise<void>;\r\n  logout: () => Promise<void>;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  const apiClient = axios.create({\r\n    baseURL: process.env.REACT_APP_API_URL || 'http://localhost:3000/api',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    withCredentials: true, // CORSリクエストでクッキーを送信\r\n  });\r\n\r\n  // APIクライアントのインターセプターを設定\r\n  apiClient.interceptors.request.use((config) => {\r\n    const token = localStorage.getItem(process.env.REACT_APP_AUTH_STORAGE_KEY || 'it_ops_token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  });\r\n\r\n  const login = async (username: string, password: string) => {\r\n    try {\r\n      setError(null);\r\n      const response = await apiClient.post('/auth/login', { username, password });\r\n      const { token } = response.data.data;\r\n      localStorage.setItem(process.env.REACT_APP_AUTH_STORAGE_KEY || 'it_ops_token', token);\r\n      setIsAuthenticated(true);\r\n    } catch (err) {\r\n      setError('ログインに失敗しました');\r\n      throw err;\r\n    }\r\n  };\r\n\r\n  const logout = async () => {\r\n    try {\r\n      await apiClient.post('/auth/logout');\r\n    } finally {\r\n      localStorage.removeItem(process.env.REACT_APP_AUTH_STORAGE_KEY || 'it_ops_token');\r\n      setIsAuthenticated(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(process.env.REACT_APP_AUTH_STORAGE_KEY || 'it_ops_token');\r\n    if (token) {\r\n      setIsAuthenticated(true);\r\n    }\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ isAuthenticated, loading, error, login, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}