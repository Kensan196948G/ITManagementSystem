{"ast":null,"code":"import React from'react';import{BrowserRouter as Router,Routes,Route}from'react-router-dom';import{useAuth}from'../contexts/AuthContext';import{PermissionCheck}from'../components/PermissionCheck';import Dashboard from'../pages/Dashboard';import Settings from'../pages/Settings';import Security from'../pages/Security';import Metrics from'../pages/Metrics';import Users from'../pages/Users';import{GraphAPIPermissionCheck}from'../components/admin/GraphAPIPermissionCheck';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export const AppRouter=()=>{const{isAuthenticated,isLoading}=useAuth();if(isLoading){return/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"});}return/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(Dashboard,{})}),/*#__PURE__*/_jsx(Route,{path:\"/metrics\",element:/*#__PURE__*/_jsx(PermissionCheck,{resource:\"metrics\",action:\"read\",children:/*#__PURE__*/_jsx(Metrics,{})})}),/*#__PURE__*/_jsx(Route,{path:\"/metrics/edit\",element:/*#__PURE__*/_jsx(PermissionCheck,{resource:\"metrics\",action:\"write\",children:/*#__PURE__*/_jsx(Metrics,{editMode:true})})}),/*#__PURE__*/_jsx(Route,{path:\"/security\",element:/*#__PURE__*/_jsx(PermissionCheck,{resource:\"security\",action:\"read\",children:/*#__PURE__*/_jsx(Security,{})})}),/*#__PURE__*/_jsx(Route,{path:\"/security/configure\",element:/*#__PURE__*/_jsx(PermissionCheck,{resource:\"security\",action:\"write\",children:/*#__PURE__*/_jsx(Security,{editMode:true})})}),/*#__PURE__*/_jsx(Route,{path:\"/users\",element:/*#__PURE__*/_jsx(PermissionCheck,{resource:\"users\",action:\"read\",children:/*#__PURE__*/_jsx(Users,{})})}),/*#__PURE__*/_jsx(Route,{path:\"/users/manage\",element:/*#__PURE__*/_jsx(PermissionCheck,{resource:\"users\",action:\"write\",children:/*#__PURE__*/_jsx(Users,{editMode:true})})}),/*#__PURE__*/_jsx(Route,{path:\"/settings\",element:/*#__PURE__*/_jsx(PermissionCheck,{resource:\"system\",action:\"write\",children:/*#__PURE__*/_jsx(Settings,{})})}),/*#__PURE__*/_jsx(Route,{path:\"/admin/graph-permissions\",element:/*#__PURE__*/_jsx(GraphAPIPermissionCheck,{children:null})})]})});};","map":{"version":3,"names":["React","BrowserRouter","Router","Routes","Route","useAuth","PermissionCheck","Dashboard","Settings","Security","Metrics","Users","GraphAPIPermissionCheck","jsx","_jsx","jsxs","_jsxs","AppRouter","isAuthenticated","isLoading","children","path","element","resource","action","editMode"],"sources":["E:/IT運用システム/03_実装/it-ops-system/frontend/src/routes/AppRouter.tsx"],"sourcesContent":["import React from 'react';\r\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { PermissionCheck } from '../components/PermissionCheck';\r\nimport Dashboard from '../pages/Dashboard';\r\nimport Settings from '../pages/Settings';\r\nimport Security from '../pages/Security';\r\nimport Metrics from '../pages/Metrics';\r\nimport Users from '../pages/Users';\r\nimport { GraphAPIPermissionCheck } from '../components/admin/GraphAPIPermissionCheck';\r\n\r\nexport const AppRouter = () => {\r\n  const { isAuthenticated, isLoading } = useAuth();\r\n\r\n  if (isLoading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <Router>\r\n      <Routes>\r\n        {/* 基本ダッシュボード - 全ユーザーアクセス可能 */}\r\n        <Route path=\"/\" element={<Dashboard />} />\r\n        \r\n        {/* メトリクス - 閲覧/編集権限を分離 */}\r\n        <Route \r\n          path=\"/metrics\" \r\n          element={\r\n            <PermissionCheck resource=\"metrics\" action=\"read\">\r\n              <Metrics />\r\n            </PermissionCheck>\r\n          } \r\n        />\r\n        <Route \r\n          path=\"/metrics/edit\" \r\n          element={\r\n            <PermissionCheck resource=\"metrics\" action=\"write\">\r\n              <Metrics editMode={true} />\r\n            </PermissionCheck>\r\n          } \r\n        />\r\n\r\n        {/* セキュリティ設定 - 閲覧/編集権限を分離 */}\r\n        <Route \r\n          path=\"/security\" \r\n          element={\r\n            <PermissionCheck resource=\"security\" action=\"read\">\r\n              <Security />\r\n            </PermissionCheck>\r\n          } \r\n        />\r\n        <Route \r\n          path=\"/security/configure\" \r\n          element={\r\n            <PermissionCheck resource=\"security\" action=\"write\">\r\n              <Security editMode={true} />\r\n            </PermissionCheck>\r\n          } \r\n        />\r\n\r\n        {/* ユーザー管理 - 閲覧/編集権限を分離 */}\r\n        <Route \r\n          path=\"/users\" \r\n          element={\r\n            <PermissionCheck resource=\"users\" action=\"read\">\r\n              <Users />\r\n            </PermissionCheck>\r\n          } \r\n        />\r\n        <Route \r\n          path=\"/users/manage\" \r\n          element={\r\n            <PermissionCheck resource=\"users\" action=\"write\">\r\n              <Users editMode={true} />\r\n            </PermissionCheck>\r\n          } \r\n        />\r\n\r\n        {/* システム設定 - 高度な権限が必要 */}\r\n        <Route \r\n          path=\"/settings\" \r\n          element={\r\n            <PermissionCheck resource=\"system\" action=\"write\">\r\n              <Settings />\r\n            </PermissionCheck>\r\n          } \r\n        />\r\n\r\n        {/* Graph API パーミッション管理 - グローバル管理者のみ */}\r\n        <Route \r\n          path=\"/admin/graph-permissions\" \r\n          element={\r\n            <GraphAPIPermissionCheck>\r\n              {/* 空のチャイルドレンとしてnullを渡す */}\r\n              {null}\r\n            </GraphAPIPermissionCheck>\r\n          } \r\n        />\r\n      </Routes>\r\n    </Router>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}