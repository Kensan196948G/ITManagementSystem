{"ast":null,"code":"import axios from'axios';// 開発環境の判定\nconst isDevelopment=process.env.NODE_ENV==='development';// 環境変数からAPIのベースURLを取得\nconst API_BASE_URL=process.env.REACT_APP_API_URL||'http://localhost:3002';export const axiosInstance=axios.create({baseURL:API_BASE_URL,headers:{'Content-Type':'application/json'},withCredentials:true,timeout:5000,// 5秒タイムアウト\nvalidateStatus:status=>{return status>=200&&status<500;// 500エラーのみ例外として扱う\n}});// リクエストインターセプター\naxiosInstance.interceptors.request.use(config=>{const token=localStorage.getItem('token');if(token){config.headers.Authorization=`Bearer ${token}`;}if(isDevelopment){var _config$method;console.log(`[DEV] Requesting: ${(_config$method=config.method)===null||_config$method===void 0?void 0:_config$method.toUpperCase()} ${config.url}`);}return config;},error=>{return Promise.reject(error);});// レスポンスインターセプター\naxiosInstance.interceptors.response.use(response=>{if(isDevelopment){console.log(`[DEV] Response from ${response.config.url}:`,response.data);}return response;},async error=>{var _error$response;if(isDevelopment){console.error(`[DEV] API Error:`,error);}if(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===401){localStorage.removeItem('token');window.location.href='/login';}return Promise.reject(error);});export const authApi={async login(credentials){const endpoint=isDevelopment?'/auth/dev/login':'/auth/login';try{var _response$data,_response$data$data;const response=await axiosInstance.post(endpoint,credentials);if((_response$data=response.data)!==null&&_response$data!==void 0&&(_response$data$data=_response$data.data)!==null&&_response$data$data!==void 0&&_response$data$data.token){localStorage.setItem('token',response.data.data.token);axiosInstance.defaults.headers.common['Authorization']=`Bearer ${response.data.data.token}`;}return response.data;}catch(error){console.error('Login error:',error);throw error;}},async logout(){await axiosInstance.post('/auth/logout');localStorage.removeItem('token');delete axiosInstance.defaults.headers.common['Authorization'];},async getCurrentUser(){try{const response=await axiosInstance.get('/auth/me');return response.data.data||null;}catch(error){console.error('Failed to get current user:',error);return null;}},checkPermission:async params=>{const response=await axiosInstance.post('/auth/check-permission',params);return response.data.allowed;}};export const metricsApi={async getSystemMetrics(){try{const response=await axiosInstance.get('/metrics/system');return response.data.data;}catch(error){console.error('Failed to fetch system metrics:',error);throw error;}}};export const alertsApi={getAlerts:async()=>{const response=await axiosInstance.get('/security/dashboard');const data=await response.data;if(!data||!data.activeAlerts){throw new Error('Failed to fetch alerts');}return data.activeAlerts;},acknowledgeAlert:async alertId=>{const response=await axiosInstance.post(`/security/incidents/${alertId}/respond`,{action:'acknowledge'});return response.data;}};export const logsApi={getLogs:async()=>{const response=await axiosInstance.get('/monitoring/logs');if(response.data.status==='error'||!response.data.data){throw new Error(response.data.message||'Failed to fetch logs');}return response.data.data;}};export const roleApi={async getRoleMappings(){const response=await axiosInstance.get('/auth/role-mappings');return response.data;},async getUserRoles(email){const response=await axiosInstance.get(`/auth/user-roles/${email}`);return response.data;}};export const m365Api={async getLicenses(){const response=await axiosInstance.get('/m365/licenses');return response.data;},async getUsers(){const response=await axiosInstance.get('/m365/users');return response.data;}};","map":{"version":3,"names":["axios","isDevelopment","process","env","NODE_ENV","API_BASE_URL","REACT_APP_API_URL","axiosInstance","create","baseURL","headers","withCredentials","timeout","validateStatus","status","interceptors","request","use","config","token","localStorage","getItem","Authorization","_config$method","console","log","method","toUpperCase","url","error","Promise","reject","response","data","_error$response","removeItem","window","location","href","authApi","login","credentials","endpoint","_response$data","_response$data$data","post","setItem","defaults","common","logout","getCurrentUser","get","checkPermission","params","allowed","metricsApi","getSystemMetrics","alertsApi","getAlerts","activeAlerts","Error","acknowledgeAlert","alertId","action","logsApi","getLogs","message","roleApi","getRoleMappings","getUserRoles","email","m365Api","getLicenses","getUsers"],"sources":["E:/IT運用システム/03_実装/it-ops-system/frontend/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\r\nimport { ApiResponse, AuthState, User, LoginFormData, Alert, LogEntry, AuthResponse } from '../types/api';\r\n\r\n// 開発環境の判定\r\nconst isDevelopment = process.env.NODE_ENV === 'development';\r\n\r\n// 環境変数からAPIのベースURLを取得\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:3002';\r\n\r\nexport const axiosInstance = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n  withCredentials: true,\r\n  timeout: 5000, // 5秒タイムアウト\r\n  validateStatus: (status) => {\r\n    return status >= 200 && status < 500; // 500エラーのみ例外として扱う\r\n  },\r\n});\r\n\r\n// リクエストインターセプター\r\naxiosInstance.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    if (isDevelopment) {\r\n      console.log(`[DEV] Requesting: ${config.method?.toUpperCase()} ${config.url}`);\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// レスポンスインターセプター\r\naxiosInstance.interceptors.response.use(\r\n  (response) => {\r\n    if (isDevelopment) {\r\n      console.log(`[DEV] Response from ${response.config.url}:`, response.data);\r\n    }\r\n    return response;\r\n  },\r\n  async (error) => {\r\n    if (isDevelopment) {\r\n      console.error(`[DEV] API Error:`, error);\r\n    }\r\n    if (error.response?.status === 401) {\r\n      localStorage.removeItem('token');\r\n      window.location.href = '/login';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport const authApi = {\r\n  async login(credentials: LoginFormData): Promise<ApiResponse<AuthResponse>> {\r\n    const endpoint = isDevelopment ? '/auth/dev/login' : '/auth/login';\r\n    try {\r\n      const response = await axiosInstance.post<ApiResponse<AuthResponse>>(endpoint, credentials);\r\n      if (response.data?.data?.token) {\r\n        localStorage.setItem('token', response.data.data.token);\r\n        axiosInstance.defaults.headers.common['Authorization'] = `Bearer ${response.data.data.token}`;\r\n      }\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  async logout(): Promise<void> {\r\n    await axiosInstance.post('/auth/logout');\r\n    localStorage.removeItem('token');\r\n    delete axiosInstance.defaults.headers.common['Authorization'];\r\n  },\r\n\r\n  async getCurrentUser(): Promise<User | null> {\r\n    try {\r\n      const response = await axiosInstance.get<ApiResponse<User>>('/auth/me');\r\n      return response.data.data || null;\r\n    } catch (error) {\r\n      console.error('Failed to get current user:', error);\r\n      return null;\r\n    }\r\n  },\r\n\r\n  checkPermission: async (params: { userEmail: string; check: { resource: string; action: string } }): Promise<boolean> => {\r\n    const response = await axiosInstance.post('/auth/check-permission', params);\r\n    return response.data.allowed;\r\n  }\r\n};\r\n\r\nexport const metricsApi = {\r\n  async getSystemMetrics() {\r\n    try {\r\n      const response = await axiosInstance.get('/metrics/system');\r\n      return response.data.data;\r\n    } catch (error) {\r\n      console.error('Failed to fetch system metrics:', error);\r\n      throw error;\r\n    }\r\n  },\r\n};\r\n\r\nexport const alertsApi = {\r\n  getAlerts: async (): Promise<Alert[]> => {\r\n    const response = await axiosInstance.get('/security/dashboard');\r\n    const data = await response.data;\r\n    if (!data || !data.activeAlerts) {\r\n      throw new Error('Failed to fetch alerts');\r\n    }\r\n    return data.activeAlerts;\r\n  },\r\n\r\n  acknowledgeAlert: async (alertId: string): Promise<ApiResponse> => {\r\n    const response = await axiosInstance.post(`/security/incidents/${alertId}/respond`, {\r\n      action: 'acknowledge'\r\n    });\r\n    return response.data;\r\n  },\r\n};\r\n\r\nexport const logsApi = {\r\n  getLogs: async (): Promise<LogEntry[]> => {\r\n    const response = await axiosInstance.get('/monitoring/logs');\r\n    if (response.data.status === 'error' || !response.data.data) {\r\n      throw new Error(response.data.message || 'Failed to fetch logs');\r\n    }\r\n    return response.data.data;\r\n  },\r\n};\r\n\r\nexport const roleApi = {\r\n  async getRoleMappings() {\r\n    const response = await axiosInstance.get('/auth/role-mappings');\r\n    return response.data;\r\n  },\r\n\r\n  async getUserRoles(email: string) {\r\n    const response = await axiosInstance.get(`/auth/user-roles/${email}`);\r\n    return response.data;\r\n  }\r\n};\r\n\r\nexport const m365Api = {\r\n  async getLicenses() {\r\n    const response = await axiosInstance.get('/m365/licenses');\r\n    return response.data;\r\n  },\r\n\r\n  async getUsers() {\r\n    const response = await axiosInstance.get('/m365/users');\r\n    return response.data;\r\n  }\r\n};"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAGzB;AACA,KAAM,CAAAC,aAAa,CAAGC,OAAO,CAACC,GAAG,CAACC,QAAQ,GAAK,aAAa,CAE5D;AACA,KAAM,CAAAC,YAAY,CAAGH,OAAO,CAACC,GAAG,CAACG,iBAAiB,EAAI,uBAAuB,CAE7E,MAAO,MAAM,CAAAC,aAAa,CAAGP,KAAK,CAACQ,MAAM,CAAC,CACxCC,OAAO,CAAEJ,YAAY,CACrBK,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACDC,eAAe,CAAE,IAAI,CACrBC,OAAO,CAAE,IAAI,CAAE;AACfC,cAAc,CAAGC,MAAM,EAAK,CAC1B,MAAO,CAAAA,MAAM,EAAI,GAAG,EAAIA,MAAM,CAAG,GAAG,CAAE;AACxC,CACF,CAAC,CAAC,CAEF;AACAP,aAAa,CAACQ,YAAY,CAACC,OAAO,CAACC,GAAG,CACnCC,MAAM,EAAK,CACV,KAAM,CAAAC,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAC3C,GAAIF,KAAK,CAAE,CACTD,MAAM,CAACR,OAAO,CAACY,aAAa,CAAG,UAAUH,KAAK,EAAE,CAClD,CACA,GAAIlB,aAAa,CAAE,KAAAsB,cAAA,CACjBC,OAAO,CAACC,GAAG,CAAC,sBAAAF,cAAA,CAAqBL,MAAM,CAACQ,MAAM,UAAAH,cAAA,iBAAbA,cAAA,CAAeI,WAAW,CAAC,CAAC,IAAIT,MAAM,CAACU,GAAG,EAAE,CAAC,CAChF,CACA,MAAO,CAAAV,MAAM,CACf,CAAC,CACAW,KAAK,EAAK,CACT,MAAO,CAAAC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC,CAC9B,CACF,CAAC,CAED;AACAtB,aAAa,CAACQ,YAAY,CAACiB,QAAQ,CAACf,GAAG,CACpCe,QAAQ,EAAK,CACZ,GAAI/B,aAAa,CAAE,CACjBuB,OAAO,CAACC,GAAG,CAAC,uBAAuBO,QAAQ,CAACd,MAAM,CAACU,GAAG,GAAG,CAAEI,QAAQ,CAACC,IAAI,CAAC,CAC3E,CACA,MAAO,CAAAD,QAAQ,CACjB,CAAC,CACD,KAAO,CAAAH,KAAK,EAAK,KAAAK,eAAA,CACf,GAAIjC,aAAa,CAAE,CACjBuB,OAAO,CAACK,KAAK,CAAC,kBAAkB,CAAEA,KAAK,CAAC,CAC1C,CACA,GAAI,EAAAK,eAAA,CAAAL,KAAK,CAACG,QAAQ,UAAAE,eAAA,iBAAdA,eAAA,CAAgBpB,MAAM,IAAK,GAAG,CAAE,CAClCM,YAAY,CAACe,UAAU,CAAC,OAAO,CAAC,CAChCC,MAAM,CAACC,QAAQ,CAACC,IAAI,CAAG,QAAQ,CACjC,CACA,MAAO,CAAAR,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC,CAC9B,CACF,CAAC,CAED,MAAO,MAAM,CAAAU,OAAO,CAAG,CACrB,KAAM,CAAAC,KAAKA,CAACC,WAA0B,CAAsC,CAC1E,KAAM,CAAAC,QAAQ,CAAGzC,aAAa,CAAG,iBAAiB,CAAG,aAAa,CAClE,GAAI,KAAA0C,cAAA,CAAAC,mBAAA,CACF,KAAM,CAAAZ,QAAQ,CAAG,KAAM,CAAAzB,aAAa,CAACsC,IAAI,CAA4BH,QAAQ,CAAED,WAAW,CAAC,CAC3F,IAAAE,cAAA,CAAIX,QAAQ,CAACC,IAAI,UAAAU,cAAA,YAAAC,mBAAA,CAAbD,cAAA,CAAeV,IAAI,UAAAW,mBAAA,WAAnBA,mBAAA,CAAqBzB,KAAK,CAAE,CAC9BC,YAAY,CAAC0B,OAAO,CAAC,OAAO,CAAEd,QAAQ,CAACC,IAAI,CAACA,IAAI,CAACd,KAAK,CAAC,CACvDZ,aAAa,CAACwC,QAAQ,CAACrC,OAAO,CAACsC,MAAM,CAAC,eAAe,CAAC,CAAG,UAAUhB,QAAQ,CAACC,IAAI,CAACA,IAAI,CAACd,KAAK,EAAE,CAC/F,CACA,MAAO,CAAAa,QAAQ,CAACC,IAAI,CACtB,CAAE,MAAOJ,KAAK,CAAE,CACdL,OAAO,CAACK,KAAK,CAAC,cAAc,CAAEA,KAAK,CAAC,CACpC,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED,KAAM,CAAAoB,MAAMA,CAAA,CAAkB,CAC5B,KAAM,CAAA1C,aAAa,CAACsC,IAAI,CAAC,cAAc,CAAC,CACxCzB,YAAY,CAACe,UAAU,CAAC,OAAO,CAAC,CAChC,MAAO,CAAA5B,aAAa,CAACwC,QAAQ,CAACrC,OAAO,CAACsC,MAAM,CAAC,eAAe,CAAC,CAC/D,CAAC,CAED,KAAM,CAAAE,cAAcA,CAAA,CAAyB,CAC3C,GAAI,CACF,KAAM,CAAAlB,QAAQ,CAAG,KAAM,CAAAzB,aAAa,CAAC4C,GAAG,CAAoB,UAAU,CAAC,CACvE,MAAO,CAAAnB,QAAQ,CAACC,IAAI,CAACA,IAAI,EAAI,IAAI,CACnC,CAAE,MAAOJ,KAAK,CAAE,CACdL,OAAO,CAACK,KAAK,CAAC,6BAA6B,CAAEA,KAAK,CAAC,CACnD,MAAO,KAAI,CACb,CACF,CAAC,CAEDuB,eAAe,CAAE,KAAO,CAAAC,MAA0E,EAAuB,CACvH,KAAM,CAAArB,QAAQ,CAAG,KAAM,CAAAzB,aAAa,CAACsC,IAAI,CAAC,wBAAwB,CAAEQ,MAAM,CAAC,CAC3E,MAAO,CAAArB,QAAQ,CAACC,IAAI,CAACqB,OAAO,CAC9B,CACF,CAAC,CAED,MAAO,MAAM,CAAAC,UAAU,CAAG,CACxB,KAAM,CAAAC,gBAAgBA,CAAA,CAAG,CACvB,GAAI,CACF,KAAM,CAAAxB,QAAQ,CAAG,KAAM,CAAAzB,aAAa,CAAC4C,GAAG,CAAC,iBAAiB,CAAC,CAC3D,MAAO,CAAAnB,QAAQ,CAACC,IAAI,CAACA,IAAI,CAC3B,CAAE,MAAOJ,KAAK,CAAE,CACdL,OAAO,CAACK,KAAK,CAAC,iCAAiC,CAAEA,KAAK,CAAC,CACvD,KAAM,CAAAA,KAAK,CACb,CACF,CACF,CAAC,CAED,MAAO,MAAM,CAAA4B,SAAS,CAAG,CACvBC,SAAS,CAAE,KAAAA,CAAA,GAA8B,CACvC,KAAM,CAAA1B,QAAQ,CAAG,KAAM,CAAAzB,aAAa,CAAC4C,GAAG,CAAC,qBAAqB,CAAC,CAC/D,KAAM,CAAAlB,IAAI,CAAG,KAAM,CAAAD,QAAQ,CAACC,IAAI,CAChC,GAAI,CAACA,IAAI,EAAI,CAACA,IAAI,CAAC0B,YAAY,CAAE,CAC/B,KAAM,IAAI,CAAAC,KAAK,CAAC,wBAAwB,CAAC,CAC3C,CACA,MAAO,CAAA3B,IAAI,CAAC0B,YAAY,CAC1B,CAAC,CAEDE,gBAAgB,CAAE,KAAO,CAAAC,OAAe,EAA2B,CACjE,KAAM,CAAA9B,QAAQ,CAAG,KAAM,CAAAzB,aAAa,CAACsC,IAAI,CAAC,uBAAuBiB,OAAO,UAAU,CAAE,CAClFC,MAAM,CAAE,aACV,CAAC,CAAC,CACF,MAAO,CAAA/B,QAAQ,CAACC,IAAI,CACtB,CACF,CAAC,CAED,MAAO,MAAM,CAAA+B,OAAO,CAAG,CACrBC,OAAO,CAAE,KAAAA,CAAA,GAAiC,CACxC,KAAM,CAAAjC,QAAQ,CAAG,KAAM,CAAAzB,aAAa,CAAC4C,GAAG,CAAC,kBAAkB,CAAC,CAC5D,GAAInB,QAAQ,CAACC,IAAI,CAACnB,MAAM,GAAK,OAAO,EAAI,CAACkB,QAAQ,CAACC,IAAI,CAACA,IAAI,CAAE,CAC3D,KAAM,IAAI,CAAA2B,KAAK,CAAC5B,QAAQ,CAACC,IAAI,CAACiC,OAAO,EAAI,sBAAsB,CAAC,CAClE,CACA,MAAO,CAAAlC,QAAQ,CAACC,IAAI,CAACA,IAAI,CAC3B,CACF,CAAC,CAED,MAAO,MAAM,CAAAkC,OAAO,CAAG,CACrB,KAAM,CAAAC,eAAeA,CAAA,CAAG,CACtB,KAAM,CAAApC,QAAQ,CAAG,KAAM,CAAAzB,aAAa,CAAC4C,GAAG,CAAC,qBAAqB,CAAC,CAC/D,MAAO,CAAAnB,QAAQ,CAACC,IAAI,CACtB,CAAC,CAED,KAAM,CAAAoC,YAAYA,CAACC,KAAa,CAAE,CAChC,KAAM,CAAAtC,QAAQ,CAAG,KAAM,CAAAzB,aAAa,CAAC4C,GAAG,CAAC,oBAAoBmB,KAAK,EAAE,CAAC,CACrE,MAAO,CAAAtC,QAAQ,CAACC,IAAI,CACtB,CACF,CAAC,CAED,MAAO,MAAM,CAAAsC,OAAO,CAAG,CACrB,KAAM,CAAAC,WAAWA,CAAA,CAAG,CAClB,KAAM,CAAAxC,QAAQ,CAAG,KAAM,CAAAzB,aAAa,CAAC4C,GAAG,CAAC,gBAAgB,CAAC,CAC1D,MAAO,CAAAnB,QAAQ,CAACC,IAAI,CACtB,CAAC,CAED,KAAM,CAAAwC,QAAQA,CAAA,CAAG,CACf,KAAM,CAAAzC,QAAQ,CAAG,KAAM,CAAAzB,aAAa,CAAC4C,GAAG,CAAC,aAAa,CAAC,CACvD,MAAO,CAAAnB,QAAQ,CAACC,IAAI,CACtB,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}