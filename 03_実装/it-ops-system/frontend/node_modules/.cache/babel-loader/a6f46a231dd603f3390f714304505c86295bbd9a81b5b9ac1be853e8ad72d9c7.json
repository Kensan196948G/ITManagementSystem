{"ast":null,"code":"const BASE_URL=process.env.REACT_APP_API_BASE_URL||'http://localhost:3001/api';class MetricsService{constructor(){this.pollingInterval=null;}async getSystemMetrics(){const response=await fetch(`${BASE_URL}/metrics`);const data=await response.json();if(data.status==='error'||!data.data){throw new Error(data.message||'Failed to fetch metrics');}return data.data;}async startMetricsPolling(callback){let interval=arguments.length>1&&arguments[1]!==undefined?arguments[1]:5000;// 初回データ取得\ntry{const initialMetrics=await this.getSystemMetrics();callback(initialMetrics);}catch(error){console.error('Failed to fetch initial metrics:',error);}// ポーリング開始\nthis.pollingInterval=setInterval(async()=>{try{const metrics=await this.getSystemMetrics();callback(metrics);}catch(error){console.error('Failed to fetch metrics:',error);}},interval);// クリーンアップ関数を返す\nreturn()=>{if(this.pollingInterval){clearInterval(this.pollingInterval);this.pollingInterval=null;}};}}export const metricsService=new MetricsService();","map":{"version":3,"names":["BASE_URL","process","env","REACT_APP_API_BASE_URL","MetricsService","constructor","pollingInterval","getSystemMetrics","response","fetch","data","json","status","Error","message","startMetricsPolling","callback","interval","arguments","length","undefined","initialMetrics","error","console","setInterval","metrics","clearInterval","metricsService"],"sources":["E:/IT運用システム/03_実装/it-ops-system/frontend/src/services/metricsService.ts"],"sourcesContent":["import { SystemMetrics, ApiResponse } from '../types/api';\r\n\r\nconst BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:3001/api';\r\n\r\nclass MetricsService {\r\n  private pollingInterval: NodeJS.Timeout | null = null;\r\n\r\n  async getSystemMetrics(): Promise<SystemMetrics> {\r\n    const response = await fetch(`${BASE_URL}/metrics`);\r\n    const data: ApiResponse<SystemMetrics> = await response.json();\r\n    if (data.status === 'error' || !data.data) {\r\n      throw new Error(data.message || 'Failed to fetch metrics');\r\n    }\r\n    return data.data;\r\n  }\r\n\r\n  async startMetricsPolling(callback: (metrics: SystemMetrics) => void, interval = 5000): Promise<() => void> {\r\n    // 初回データ取得\r\n    try {\r\n      const initialMetrics = await this.getSystemMetrics();\r\n      callback(initialMetrics);\r\n    } catch (error) {\r\n      console.error('Failed to fetch initial metrics:', error);\r\n    }\r\n\r\n    // ポーリング開始\r\n    this.pollingInterval = setInterval(async () => {\r\n      try {\r\n        const metrics = await this.getSystemMetrics();\r\n        callback(metrics);\r\n      } catch (error) {\r\n        console.error('Failed to fetch metrics:', error);\r\n      }\r\n    }, interval);\r\n\r\n    // クリーンアップ関数を返す\r\n    return () => {\r\n      if (this.pollingInterval) {\r\n        clearInterval(this.pollingInterval);\r\n        this.pollingInterval = null;\r\n      }\r\n    };\r\n  }\r\n}\r\n\r\nexport const metricsService = new MetricsService();"],"mappings":"AAEA,KAAM,CAAAA,QAAQ,CAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB,EAAI,2BAA2B,CAElF,KAAM,CAAAC,cAAe,CAAAC,YAAA,OACXC,eAAe,CAA0B,IAAI,EAErD,KAAM,CAAAC,gBAAgBA,CAAA,CAA2B,CAC/C,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,GAAGT,QAAQ,UAAU,CAAC,CACnD,KAAM,CAAAU,IAAgC,CAAG,KAAM,CAAAF,QAAQ,CAACG,IAAI,CAAC,CAAC,CAC9D,GAAID,IAAI,CAACE,MAAM,GAAK,OAAO,EAAI,CAACF,IAAI,CAACA,IAAI,CAAE,CACzC,KAAM,IAAI,CAAAG,KAAK,CAACH,IAAI,CAACI,OAAO,EAAI,yBAAyB,CAAC,CAC5D,CACA,MAAO,CAAAJ,IAAI,CAACA,IAAI,CAClB,CAEA,KAAM,CAAAK,mBAAmBA,CAACC,QAA0C,CAAwC,IAAtC,CAAAC,QAAQ,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,IAAI,CACnF;AACA,GAAI,CACF,KAAM,CAAAG,cAAc,CAAG,KAAM,KAAI,CAACd,gBAAgB,CAAC,CAAC,CACpDS,QAAQ,CAACK,cAAc,CAAC,CAC1B,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,CAAEA,KAAK,CAAC,CAC1D,CAEA;AACA,IAAI,CAAChB,eAAe,CAAGkB,WAAW,CAAC,SAAY,CAC7C,GAAI,CACF,KAAM,CAAAC,OAAO,CAAG,KAAM,KAAI,CAAClB,gBAAgB,CAAC,CAAC,CAC7CS,QAAQ,CAACS,OAAO,CAAC,CACnB,CAAE,MAAOH,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,CAAEA,KAAK,CAAC,CAClD,CACF,CAAC,CAAEL,QAAQ,CAAC,CAEZ;AACA,MAAO,IAAM,CACX,GAAI,IAAI,CAACX,eAAe,CAAE,CACxBoB,aAAa,CAAC,IAAI,CAACpB,eAAe,CAAC,CACnC,IAAI,CAACA,eAAe,CAAG,IAAI,CAC7B,CACF,CAAC,CACH,CACF,CAEA,MAAO,MAAM,CAAAqB,cAAc,CAAG,GAAI,CAAAvB,cAAc,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}