{"ast":null,"code":"import React,{useEffect,useState}from'react';import{AppRouter}from'./routes/AppRouter';import websocket from'./services/websocket';import{jsx as _jsx}from\"react/jsx-runtime\";function App(){const[connectionStatus,setConnectionStatus]=useState('initializing');// WebSocket接続を初期化\nuseEffect(()=>{console.log('Initializing WebSocket or Polling...');// WebSocketに接続\nwebsocket.connect();// イベントリスナーを登録\nwebsocket.on('connected',data=>{console.log('WebSocket connected:',data);setConnectionStatus('connected');});websocket.on('disconnected',data=>{console.log('WebSocket disconnected:',data);setConnectionStatus('disconnected');});websocket.on('error',error=>{console.error('WebSocket error:',error);// エラーが発生してもステータスは更新しない（フォールバックメカニズムが処理）\n});// システム状態更新の受信\nwebsocket.on('system_status',status=>{console.log('System status update received:',status);// ここでシステム状態を更新するための処理を追加できます\n});// コンポーネントがアンマウントされた時に接続を閉じる\nreturn()=>{console.log('Closing WebSocket connection...');websocket.disconnect();};},[]);// 接続ステータスをデバッグ表示（開発環境のみ）\nuseEffect(()=>{if(process.env.NODE_ENV==='development'){console.log(`Connection status changed: ${connectionStatus}`);}},[connectionStatus]);return/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsx(AppRouter,{})});}export default App;","map":{"version":3,"names":["React","useEffect","useState","AppRouter","websocket","jsx","_jsx","App","connectionStatus","setConnectionStatus","console","log","connect","on","data","error","status","disconnect","process","env","NODE_ENV","className","children"],"sources":["E:/IT運用システム/03_実装/it-ops-system/frontend/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { AppRouter } from './routes/AppRouter';\r\nimport websocket from './services/websocket';\r\n\r\nfunction App() {\r\n  const [connectionStatus, setConnectionStatus] = useState<string>('initializing');\r\n  \r\n  // WebSocket接続を初期化\r\n  useEffect(() => {\r\n    console.log('Initializing WebSocket or Polling...');\r\n    \r\n    // WebSocketに接続\r\n    websocket.connect();\r\n    \r\n    // イベントリスナーを登録\r\n    websocket.on('connected', (data: { timestamp: string }) => {\r\n      console.log('WebSocket connected:', data);\r\n      setConnectionStatus('connected');\r\n    });\r\n    \r\n    websocket.on('disconnected', (data: { code: number; reason: string; timestamp: string }) => {\r\n      console.log('WebSocket disconnected:', data);\r\n      setConnectionStatus('disconnected');\r\n    });\r\n    \r\n    websocket.on('error', (error: { error: unknown; timestamp: string }) => {\r\n      console.error('WebSocket error:', error);\r\n      // エラーが発生してもステータスは更新しない（フォールバックメカニズムが処理）\r\n    });\r\n    \r\n    // システム状態更新の受信\r\n    websocket.on('system_status', (status: any) => {\r\n      console.log('System status update received:', status);\r\n      // ここでシステム状態を更新するための処理を追加できます\r\n    });\r\n    \r\n    // コンポーネントがアンマウントされた時に接続を閉じる\r\n    return () => {\r\n      console.log('Closing WebSocket connection...');\r\n      websocket.disconnect();\r\n    };\r\n  }, []);\r\n  \r\n  // 接続ステータスをデバッグ表示（開発環境のみ）\r\n  useEffect(() => {\r\n    if (process.env.NODE_ENV === 'development') {\r\n      console.log(`Connection status changed: ${connectionStatus}`);\r\n    }\r\n  }, [connectionStatus]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <AppRouter />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,OAASC,SAAS,KAAQ,oBAAoB,CAC9C,MAAO,CAAAC,SAAS,KAAM,sBAAsB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE7C,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,KAAM,CAACC,gBAAgB,CAAEC,mBAAmB,CAAC,CAAGP,QAAQ,CAAS,cAAc,CAAC,CAEhF;AACAD,SAAS,CAAC,IAAM,CACdS,OAAO,CAACC,GAAG,CAAC,sCAAsC,CAAC,CAEnD;AACAP,SAAS,CAACQ,OAAO,CAAC,CAAC,CAEnB;AACAR,SAAS,CAACS,EAAE,CAAC,WAAW,CAAGC,IAA2B,EAAK,CACzDJ,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAEG,IAAI,CAAC,CACzCL,mBAAmB,CAAC,WAAW,CAAC,CAClC,CAAC,CAAC,CAEFL,SAAS,CAACS,EAAE,CAAC,cAAc,CAAGC,IAAyD,EAAK,CAC1FJ,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAEG,IAAI,CAAC,CAC5CL,mBAAmB,CAAC,cAAc,CAAC,CACrC,CAAC,CAAC,CAEFL,SAAS,CAACS,EAAE,CAAC,OAAO,CAAGE,KAA4C,EAAK,CACtEL,OAAO,CAACK,KAAK,CAAC,kBAAkB,CAAEA,KAAK,CAAC,CACxC;AACF,CAAC,CAAC,CAEF;AACAX,SAAS,CAACS,EAAE,CAAC,eAAe,CAAGG,MAAW,EAAK,CAC7CN,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAEK,MAAM,CAAC,CACrD;AACF,CAAC,CAAC,CAEF;AACA,MAAO,IAAM,CACXN,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC,CAC9CP,SAAS,CAACa,UAAU,CAAC,CAAC,CACxB,CAAC,CACH,CAAC,CAAE,EAAE,CAAC,CAEN;AACAhB,SAAS,CAAC,IAAM,CACd,GAAIiB,OAAO,CAACC,GAAG,CAACC,QAAQ,GAAK,aAAa,CAAE,CAC1CV,OAAO,CAACC,GAAG,CAAC,8BAA8BH,gBAAgB,EAAE,CAAC,CAC/D,CACF,CAAC,CAAE,CAACA,gBAAgB,CAAC,CAAC,CAEtB,mBACEF,IAAA,QAAKe,SAAS,CAAC,KAAK,CAAAC,QAAA,cAClBhB,IAAA,CAACH,SAAS,GAAE,CAAC,CACV,CAAC,CAEV,CAEA,cAAe,CAAAI,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}