{"ast":null,"code":"const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:3000/api';\nclass MetricsService {\n  constructor() {\n    this.pollingInterval = null;\n  }\n  async getSystemMetrics() {\n    const response = await fetch(`${API_BASE_URL}/metrics/system`);\n    const data = await response.json();\n    if (data.status === 'error' || !data.data) {\n      throw new Error(data.message || 'Failed to fetch metrics');\n    }\n    return data.data;\n  }\n  async startMetricsPolling(callback, interval = 5000) {\n    // 初回データ取得\n    try {\n      const initialMetrics = await this.getSystemMetrics();\n      callback(initialMetrics);\n    } catch (error) {\n      console.error('Failed to fetch initial metrics:', error);\n    }\n\n    // ポーリング開始\n    this.pollingInterval = setInterval(async () => {\n      try {\n        const metrics = await this.getSystemMetrics();\n        callback(metrics);\n      } catch (error) {\n        console.error('Failed to fetch metrics:', error);\n      }\n    }, interval);\n\n    // クリーンアップ関数を返す\n    return () => {\n      if (this.pollingInterval) {\n        clearInterval(this.pollingInterval);\n        this.pollingInterval = null;\n      }\n    };\n  }\n}\nexport const metricsService = new MetricsService();","map":{"version":3,"names":["API_BASE_URL","process","env","REACT_APP_API_URL","MetricsService","constructor","pollingInterval","getSystemMetrics","response","fetch","data","json","status","Error","message","startMetricsPolling","callback","interval","initialMetrics","error","console","setInterval","metrics","clearInterval","metricsService"],"sources":["E:/IT運用システム/03_実装/it-ops-system/frontend/src/services/metricsService.ts"],"sourcesContent":["import { SystemMetrics, ApiResponse } from '../types/api';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:3000/api';\r\n\r\nclass MetricsService {\r\n  private pollingInterval: NodeJS.Timeout | null = null;\r\n\r\n  async getSystemMetrics(): Promise<SystemMetrics> {\r\n    const response = await fetch(`${API_BASE_URL}/metrics/system`);\r\n    const data: ApiResponse<SystemMetrics> = await response.json();\r\n    if (data.status === 'error' || !data.data) {\r\n      throw new Error(data.message || 'Failed to fetch metrics');\r\n    }\r\n    return data.data;\r\n  }\r\n\r\n  async startMetricsPolling(callback: (metrics: SystemMetrics) => void, interval = 5000): Promise<() => void> {\r\n    // 初回データ取得\r\n    try {\r\n      const initialMetrics = await this.getSystemMetrics();\r\n      callback(initialMetrics);\r\n    } catch (error) {\r\n      console.error('Failed to fetch initial metrics:', error);\r\n    }\r\n\r\n    // ポーリング開始\r\n    this.pollingInterval = setInterval(async () => {\r\n      try {\r\n        const metrics = await this.getSystemMetrics();\r\n        callback(metrics);\r\n      } catch (error) {\r\n        console.error('Failed to fetch metrics:', error);\r\n      }\r\n    }, interval);\r\n\r\n    // クリーンアップ関数を返す\r\n    return () => {\r\n      if (this.pollingInterval) {\r\n        clearInterval(this.pollingInterval);\r\n        this.pollingInterval = null;\r\n      }\r\n    };\r\n  }\r\n}\r\n\r\nexport const metricsService = new MetricsService();"],"mappings":"AAEA,MAAMA,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;AAEjF,MAAMC,cAAc,CAAC;EAAAC,YAAA;IAAA,KACXC,eAAe,GAA0B,IAAI;EAAA;EAErD,MAAMC,gBAAgBA,CAAA,EAA2B;IAC/C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGT,YAAY,iBAAiB,CAAC;IAC9D,MAAMU,IAAgC,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAC9D,IAAID,IAAI,CAACE,MAAM,KAAK,OAAO,IAAI,CAACF,IAAI,CAACA,IAAI,EAAE;MACzC,MAAM,IAAIG,KAAK,CAACH,IAAI,CAACI,OAAO,IAAI,yBAAyB,CAAC;IAC5D;IACA,OAAOJ,IAAI,CAACA,IAAI;EAClB;EAEA,MAAMK,mBAAmBA,CAACC,QAA0C,EAAEC,QAAQ,GAAG,IAAI,EAAuB;IAC1G;IACA,IAAI;MACF,MAAMC,cAAc,GAAG,MAAM,IAAI,CAACX,gBAAgB,CAAC,CAAC;MACpDS,QAAQ,CAACE,cAAc,CAAC;IAC1B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;IAC1D;;IAEA;IACA,IAAI,CAACb,eAAe,GAAGe,WAAW,CAAC,YAAY;MAC7C,IAAI;QACF,MAAMC,OAAO,GAAG,MAAM,IAAI,CAACf,gBAAgB,CAAC,CAAC;QAC7CS,QAAQ,CAACM,OAAO,CAAC;MACnB,CAAC,CAAC,OAAOH,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD;IACF,CAAC,EAAEF,QAAQ,CAAC;;IAEZ;IACA,OAAO,MAAM;MACX,IAAI,IAAI,CAACX,eAAe,EAAE;QACxBiB,aAAa,CAAC,IAAI,CAACjB,eAAe,CAAC;QACnC,IAAI,CAACA,eAAe,GAAG,IAAI;MAC7B;IACF,CAAC;EACH;AACF;AAEA,OAAO,MAAMkB,cAAc,GAAG,IAAIpB,cAAc,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}