{"ast":null,"code":"var _jsxFileName = \"E:\\\\IT\\u904B\\u7528\\u30B7\\u30B9\\u30C6\\u30E0\\\\03_\\u5B9F\\u88C5\\\\it-ops-system\\\\frontend\\\\src\\\\contexts\\\\AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { authApi } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext({\n  isAuthenticated: false,\n  user: null,\n  isLoading: true,\n  error: null,\n  login: async () => ({\n    status: 'error',\n    message: 'Context not initialized'\n  }),\n  logout: async () => {},\n  getCurrentUser: async () => null\n});\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [state, setState] = useState({\n    isAuthenticated: Boolean(localStorage.getItem('token')),\n    user: null,\n    token: localStorage.getItem('token'),\n    loading: true,\n    error: null\n  });\n  useEffect(() => {\n    const initAuth = async () => {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        setState(prev => ({\n          ...prev,\n          loading: false,\n          isAuthenticated: false\n        }));\n        return;\n      }\n      try {\n        const user = await authApi.getCurrentUser();\n        setState(prev => ({\n          ...prev,\n          user,\n          isAuthenticated: Boolean(user),\n          loading: false\n        }));\n      } catch (error) {\n        localStorage.removeItem('token');\n        setState(prev => ({\n          ...prev,\n          loading: false,\n          isAuthenticated: false,\n          user: null\n        }));\n      }\n    };\n    initAuth();\n  }, []);\n  const login = async credentials => {\n    setState(prev => ({\n      ...prev,\n      loading: true,\n      error: null\n    }));\n    try {\n      const response = await authApi.login(credentials);\n      if ((response === null || response === void 0 ? void 0 : response.status) === 'success' && response !== null && response !== void 0 && response.data) {\n        const authData = response.data;\n        setState(prev => ({\n          ...prev,\n          isAuthenticated: true,\n          user: {\n            id: authData.user.id || authData.user.username,\n            username: authData.user.username,\n            displayName: authData.user.displayName,\n            email: authData.user.email,\n            roles: authData.user.roles || authData.user.groups || []\n          },\n          token: authData.token,\n          loading: false,\n          error: null\n        }));\n      } else {\n        console.warn('Unexpected response format:', response);\n        // エラーをスローせず、最善を尽くして処理\n        setState(prev => ({\n          ...prev,\n          loading: false,\n          error: 'ログイン情報の処理に問題が発生しました'\n        }));\n      }\n      return response;\n    } catch (error) {\n      setState(prev => ({\n        ...prev,\n        loading: false,\n        error: 'Login failed',\n        isAuthenticated: false,\n        user: null,\n        token: null\n      }));\n      throw error;\n    }\n  };\n  const logout = async () => {\n    try {\n      await authApi.logout();\n    } finally {\n      setState({\n        isAuthenticated: false,\n        user: null,\n        token: null,\n        loading: false,\n        error: null\n      });\n      localStorage.removeItem('token');\n    }\n  };\n  const getCurrentUser = async () => {\n    try {\n      const user = await authApi.getCurrentUser();\n      setState(prev => ({\n        ...prev,\n        user,\n        isAuthenticated: Boolean(user)\n      }));\n      return user;\n    } catch (error) {\n      setState(prev => ({\n        ...prev,\n        user: null,\n        isAuthenticated: false\n      }));\n      return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated: state.isAuthenticated,\n      user: state.user,\n      isLoading: state.loading,\n      error: state.error,\n      login,\n      logout,\n      getCurrentUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"oOkdM7kb5Dz1Z9Kfb52uB25PGi0=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","authApi","jsxDEV","_jsxDEV","AuthContext","isAuthenticated","user","isLoading","error","login","status","message","logout","getCurrentUser","AuthProvider","children","_s","state","setState","Boolean","localStorage","getItem","token","loading","initAuth","prev","removeItem","credentials","response","data","authData","id","username","displayName","email","roles","groups","console","warn","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["E:/IT運用システム/03_実装/it-ops-system/frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { AuthState, User, LoginFormData, ApiResponse, AuthResponse } from '../types/api';\r\nimport { authApi } from '../services/api';\r\n\r\ninterface AuthContextType {\r\n  isAuthenticated: boolean;\r\n  user: User | null;\r\n  isLoading: boolean;\r\n  error: string | null;\r\n  login: (credentials: LoginFormData) => Promise<ApiResponse<AuthResponse>>;\r\n  logout: () => Promise<void>;\r\n  getCurrentUser: () => Promise<User | null>;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType>({\r\n  isAuthenticated: false,\r\n  user: null,\r\n  isLoading: true,\r\n  error: null,\r\n  login: async () => ({ status: 'error', message: 'Context not initialized' }),\r\n  logout: async () => {},\r\n  getCurrentUser: async () => null,\r\n});\r\n\r\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n  const [state, setState] = useState<AuthState>({\r\n    isAuthenticated: Boolean(localStorage.getItem('token')),\r\n    user: null,\r\n    token: localStorage.getItem('token'),\r\n    loading: true,\r\n    error: null,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const initAuth = async () => {\r\n      const token = localStorage.getItem('token');\r\n      if (!token) {\r\n        setState(prev => ({\r\n          ...prev,\r\n          loading: false,\r\n          isAuthenticated: false,\r\n        }));\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const user = await authApi.getCurrentUser();\r\n        setState(prev => ({\r\n          ...prev,\r\n          user,\r\n          isAuthenticated: Boolean(user),\r\n          loading: false,\r\n        }));\r\n      } catch (error) {\r\n        localStorage.removeItem('token');\r\n        setState(prev => ({\r\n          ...prev,\r\n          loading: false,\r\n          isAuthenticated: false,\r\n          user: null,\r\n        }));\r\n      }\r\n    };\r\n\r\n    initAuth();\r\n  }, []);\r\n\r\n  const login = async (credentials: LoginFormData) => {\r\n    setState(prev => ({ ...prev, loading: true, error: null }));\r\n    try {\r\n      const response = await authApi.login(credentials);\r\n      if (response?.status === 'success' && response?.data) {\r\n        const authData = response.data;\r\n        setState(prev => ({\r\n          ...prev,\r\n          isAuthenticated: true,\r\n          user: {\r\n            id: authData.user.id || authData.user.username,\r\n            username: authData.user.username,\r\n            displayName: authData.user.displayName,\r\n            email: authData.user.email,\r\n            roles: authData.user.roles || authData.user.groups || [],\r\n          },\r\n          token: authData.token,\r\n          loading: false,\r\n          error: null,\r\n        }));\r\n      } else {\r\n        console.warn('Unexpected response format:', response);\r\n        // エラーをスローせず、最善を尽くして処理\r\n        setState(prev => ({\r\n          ...prev,\r\n          loading: false,\r\n          error: 'ログイン情報の処理に問題が発生しました',\r\n        }));\r\n      }\r\n      return response;\r\n    } catch (error) {\r\n      setState(prev => ({\r\n        ...prev,\r\n        loading: false,\r\n        error: 'Login failed',\r\n        isAuthenticated: false,\r\n        user: null,\r\n        token: null,\r\n      }));\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const logout = async () => {\r\n    try {\r\n      await authApi.logout();\r\n    } finally {\r\n      setState({\r\n        isAuthenticated: false,\r\n        user: null,\r\n        token: null,\r\n        loading: false,\r\n        error: null,\r\n      });\r\n      localStorage.removeItem('token');\r\n    }\r\n  };\r\n\r\n  const getCurrentUser = async () => {\r\n    try {\r\n      const user = await authApi.getCurrentUser();\r\n      setState(prev => ({\r\n        ...prev,\r\n        user,\r\n        isAuthenticated: Boolean(user),\r\n      }));\r\n      return user;\r\n    } catch (error) {\r\n      setState(prev => ({\r\n        ...prev,\r\n        user: null,\r\n        isAuthenticated: false,\r\n      }));\r\n      return null;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        isAuthenticated: state.isAuthenticated,\r\n        user: state.user,\r\n        isLoading: state.loading,\r\n        error: state.error,\r\n        login,\r\n        logout,\r\n        getCurrentUser,\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}