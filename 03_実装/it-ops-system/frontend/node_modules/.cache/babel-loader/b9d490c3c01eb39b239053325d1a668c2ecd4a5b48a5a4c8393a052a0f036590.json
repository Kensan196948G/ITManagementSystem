{"ast":null,"code":"import{useState,useEffect}from'react';import{Drawer,List,ListItem,ListItemIcon,ListItemText}from'@mui/material';import DashboardIcon from'@mui/icons-material/Dashboard';import SecurityIcon from'@mui/icons-material/Security';import PeopleIcon from'@mui/icons-material/People';import SettingsIcon from'@mui/icons-material/Settings';import TimelineIcon from'@mui/icons-material/Timeline';import{useAuth}from'../contexts/AuthContext';import{roleApi}from'../services/api';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const menuItems=[{label:'ダッシュボード',icon:/*#__PURE__*/_jsx(DashboardIcon,{}),path:'/',permission:'read:dashboard'},{label:'メトリクス',icon:/*#__PURE__*/_jsx(TimelineIcon,{}),path:'/metrics',permission:'read:metrics'},{label:'セキュリティ',icon:/*#__PURE__*/_jsx(SecurityIcon,{}),path:'/security',permission:'read:security'},{label:'ユーザー管理',icon:/*#__PURE__*/_jsx(PeopleIcon,{}),path:'/users',permission:'read:users'},{label:'システム設定',icon:/*#__PURE__*/_jsx(SettingsIcon,{}),path:'/settings',permission:'admin:system'}];export const SideNav=()=>{const{user}=useAuth();const[userPermissions,setUserPermissions]=useState([]);const[isGlobalAdmin,setIsGlobalAdmin]=useState(false);useEffect(()=>{const fetchUserPermissions=async()=>{try{if(!(user!==null&&user!==void 0&&user.email))return;const data=await roleApi.getUserRoles(user.email);setUserPermissions(data.roles);setIsGlobalAdmin(data.isGlobalAdmin);}catch(error){console.error('権限情報の取得に失敗しました:',error);}};fetchUserPermissions();},[user]);const hasPermission=permission=>{return isGlobalAdmin||userPermissions.includes(permission);};return/*#__PURE__*/_jsx(Drawer,{variant:\"permanent\",children:/*#__PURE__*/_jsx(List,{children:menuItems.map(item=>hasPermission(item.permission)&&/*#__PURE__*/_jsxs(ListItem,{button:true,component:\"a\",href:item.path,children:[/*#__PURE__*/_jsx(ListItemIcon,{children:item.icon}),/*#__PURE__*/_jsx(ListItemText,{primary:item.label})]},item.path))})});};","map":{"version":3,"names":["useState","useEffect","Drawer","List","ListItem","ListItemIcon","ListItemText","DashboardIcon","SecurityIcon","PeopleIcon","SettingsIcon","TimelineIcon","useAuth","roleApi","jsx","_jsx","jsxs","_jsxs","menuItems","label","icon","path","permission","SideNav","user","userPermissions","setUserPermissions","isGlobalAdmin","setIsGlobalAdmin","fetchUserPermissions","email","data","getUserRoles","roles","error","console","hasPermission","includes","variant","children","map","item","button","component","href","primary"],"sources":["E:/IT運用システム/03_実装/it-ops-system/frontend/src/components/SideNav.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { Drawer, List, ListItem, ListItemIcon, ListItemText } from '@mui/material';\r\nimport DashboardIcon from '@mui/icons-material/Dashboard';\r\nimport SecurityIcon from '@mui/icons-material/Security';\r\nimport PeopleIcon from '@mui/icons-material/People';\r\nimport SettingsIcon from '@mui/icons-material/Settings';\r\nimport TimelineIcon from '@mui/icons-material/Timeline';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { roleApi } from '../services/api';\r\n\r\ninterface MenuItem {\r\n  label: string;\r\n  icon: React.ReactNode;\r\n  path: string;\r\n  permission: string;\r\n}\r\n\r\nconst menuItems: MenuItem[] = [\r\n  { label: 'ダッシュボード', icon: <DashboardIcon />, path: '/', permission: 'read:dashboard' },\r\n  { label: 'メトリクス', icon: <TimelineIcon />, path: '/metrics', permission: 'read:metrics' },\r\n  { label: 'セキュリティ', icon: <SecurityIcon />, path: '/security', permission: 'read:security' },\r\n  { label: 'ユーザー管理', icon: <PeopleIcon />, path: '/users', permission: 'read:users' },\r\n  { label: 'システム設定', icon: <SettingsIcon />, path: '/settings', permission: 'admin:system' }\r\n];\r\n\r\nexport const SideNav = () => {\r\n  const { user } = useAuth();\r\n  const [userPermissions, setUserPermissions] = useState<string[]>([]);\r\n  const [isGlobalAdmin, setIsGlobalAdmin] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchUserPermissions = async () => {\r\n      try {\r\n        if (!user?.email) return;\r\n\r\n        const data = await roleApi.getUserRoles(user.email);\r\n        setUserPermissions(data.roles);\r\n        setIsGlobalAdmin(data.isGlobalAdmin);\r\n      } catch (error) {\r\n        console.error('権限情報の取得に失敗しました:', error);\r\n      }\r\n    };\r\n\r\n    fetchUserPermissions();\r\n  }, [user]);\r\n\r\n  const hasPermission = (permission: string): boolean => {\r\n    return isGlobalAdmin || userPermissions.includes(permission);\r\n  };\r\n\r\n  return (\r\n    <Drawer variant=\"permanent\">\r\n      <List>\r\n        {menuItems.map((item) => (\r\n          hasPermission(item.permission) && (\r\n            <ListItem \r\n              button \r\n              key={item.path}\r\n              component=\"a\"\r\n              href={item.path}\r\n            >\r\n              <ListItemIcon>{item.icon}</ListItemIcon>\r\n              <ListItemText primary={item.label} />\r\n            </ListItem>\r\n          )\r\n        ))}\r\n      </List>\r\n    </Drawer>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}